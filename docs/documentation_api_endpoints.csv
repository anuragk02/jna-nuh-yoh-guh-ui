Category,Operation,HTTP Method,Endpoint,Description,Request Body,Response Type,Example Response,Status Codes
Concepts,Create,POST,/api/v1/concepts,Create a new concept,"{""name"": ""string"", ""summary"": ""string"", ""mastery_level"": number}",Concept Object,"{""id"": ""concept_123"", ""name"": ""System Dynamics"", ""mastery_level"": 7}","201: Created, 400: Bad Request"
Concepts,Get All,GET,/api/v1/concepts,Retrieve all concepts,None,Array of Concept Objects,"[{""id"": ""concept_123"", ""name"": ""System Dynamics""}]","200: OK, 500: Internal Error"
Concepts,Get One,GET,/api/v1/concepts/:id,Retrieve specific concept by ID,None,Concept Object,"{""id"": ""concept_123"", ""name"": ""System Dynamics""}","200: OK, 404: Not Found"
Concepts,Update,PUT,/api/v1/concepts/:id,Update existing concept,"{""name"": ""string"", ""summary"": ""string"", ""mastery_level"": number}",Updated Concept Object,"{""id"": ""concept_123"", ""name"": ""Updated Name""}","200: OK, 404: Not Found, 400: Bad Request"
Concepts,Delete,DELETE,/api/v1/concepts/:id,Delete concept and relationships,None,Success Message,"{""message"": ""Concept deleted successfully""}","200: OK, 404: Not Found"

Essays,Create,POST,/api/v1/essays,Create a new essay,"{""title"": ""string"", ""content"": ""string""}",Essay Object,"{""id"": ""essay_123"", ""title"": ""My Essay"", ""created_at"": ""2025-09-20T21:15:46Z""}","201: Created, 400: Bad Request"
Essays,Get All,GET,/api/v1/essays,Retrieve all essays,None,Array of Essay Objects,"[{""id"": ""essay_123"", ""title"": ""My Essay""}]","200: OK, 500: Internal Error"
Essays,Get One,GET,/api/v1/essays/:id,Retrieve specific essay by ID,None,Essay Object,"{""id"": ""essay_123"", ""title"": ""My Essay"", ""content"": ""Full content...""}","200: OK, 404: Not Found"
Essays,Update,PUT,/api/v1/essays/:id,Update existing essay,"{""title"": ""string"", ""content"": ""string""}",Updated Essay Object,"{""id"": ""essay_123"", ""title"": ""Updated Title""}","200: OK, 404: Not Found, 400: Bad Request"
Essays,Delete,DELETE,/api/v1/essays/:id,Delete essay and relationships,None,Success Message,"{""message"": ""Essay deleted successfully""}","200: OK, 404: Not Found"

Claims,Create,POST,/api/v1/claims,Create a new claim,"{""text"": ""string"", ""confidence_score"": number, ""is_verified"": boolean}",Claim Object,"{""id"": ""claim_123"", ""text"": ""Complex systems exhibit emergent properties""}","201: Created, 400: Bad Request"
Claims,Get All,GET,/api/v1/claims,Retrieve all claims,None,Array of Claim Objects,"[{""id"": ""claim_123"", ""text"": ""Systems are complex""}]","200: OK, 500: Internal Error"
Claims,Get One,GET,/api/v1/claims/:id,Retrieve specific claim by ID,None,Claim Object,"{""id"": ""claim_123"", ""text"": ""Systems theory is valid""}","200: OK, 404: Not Found"
Claims,Update,PUT,/api/v1/claims/:id,Update existing claim,"{""text"": ""string"", ""confidence_score"": number, ""is_verified"": boolean}",Updated Claim Object,"{""id"": ""claim_123"", ""is_verified"": true}","200: OK, 404: Not Found, 400: Bad Request"
Claims,Delete,DELETE,/api/v1/claims/:id,Delete claim and relationships,None,Success Message,"{""message"": ""Claim deleted successfully""}","200: OK, 404: Not Found"

Sources,Create,POST,/api/v1/sources,Create a new source,"{""type"": ""string"", ""title"": ""string"", ""author"": ""string"", ""url"": ""string""}",Source Object,"{""id"": ""source_123"", ""title"": ""Thinking in Systems"", ""type"": ""Book""}","201: Created, 400: Bad Request"
Sources,Get All,GET,/api/v1/sources,Retrieve all sources,None,Array of Source Objects,"[{""id"": ""source_123"", ""title"": ""Book Title""}]","200: OK, 500: Internal Error"
Sources,Get One,GET,/api/v1/sources/:id,Retrieve specific source by ID,None,Source Object,"{""id"": ""source_123"", ""title"": ""Book Title"", ""author"": ""Author Name""}","200: OK, 404: Not Found"
Sources,Update,PUT,/api/v1/sources/:id,Update existing source,"{""type"": ""string"", ""title"": ""string"", ""author"": ""string"", ""url"": ""string""}",Updated Source Object,"{""id"": ""source_123"", ""title"": ""Updated Title""}","200: OK, 404: Not Found, 400: Bad Request"
Sources,Delete,DELETE,/api/v1/sources/:id,Delete source and relationships,None,Success Message,"{""message"": ""Source deleted successfully""}","200: OK, 404: Not Found"

Questions,Create,POST,/api/v1/questions,Create a new question,"{""text"": ""string"", ""priority"": number, ""status"": ""string""}",Question Object,"{""id"": ""question_123"", ""text"": ""How do systems work?"", ""status"": ""open""}","201: Created, 400: Bad Request"
Questions,Get All,GET,/api/v1/questions,Retrieve all questions,None,Array of Question Objects,"[{""id"": ""question_123"", ""text"": ""How do systems work?""}]","200: OK, 500: Internal Error"
Questions,Get One,GET,/api/v1/questions/:id,Retrieve specific question by ID,None,Question Object,"{""id"": ""question_123"", ""text"": ""Research question"", ""priority"": 8}","200: OK, 404: Not Found"
Questions,Update,PUT,/api/v1/questions/:id,Update existing question,"{""text"": ""string"", ""priority"": number, ""status"": ""string""}",Updated Question Object,"{""id"": ""question_123"", ""status"": ""answered""}","200: OK, 404: Not Found, 400: Bad Request"
Questions,Delete,DELETE,/api/v1/questions/:id,Delete question and relationships,None,Success Message,"{""message"": ""Question deleted successfully""}","200: OK, 404: Not Found"

Relationships,Create Generic,POST,/api/v1/relationships,Create any relationship type,"{""from"": ""string"", ""to"": ""string"", ""type"": ""string"", ""data"": {}}",Success Message,"{""message"": ""Relationship created"", ""from"": ""node_1"", ""to"": ""node_2""}","201: Created, 400: Bad Request"
Relationships,Create DEFINES,POST,/api/v1/defines,Create DEFINES relationship,"{""from"": ""concept_id"", ""to"": ""concept_id"", ""definition"": ""string""}",Success Message,"{""message"": ""DEFINES relationship created""}","201: Created, 400: Bad Request"
Relationships,Create INFLUENCES,POST,/api/v1/influences,Create INFLUENCES relationship,"{""from"": ""concept_id"", ""to"": ""concept_id"", ""strength"": number}",Success Message,"{""message"": ""INFLUENCES relationship created"", ""polarity"": ""positive""}","201: Created, 400: Bad Request"
Relationships,Create SUPPORTS,POST,/api/v1/supports,Create SUPPORTS relationship,"{""from"": ""source_or_claim_id"", ""to"": ""claim_id"", ""strength"": number}",Success Message,"{""message"": ""SUPPORTS relationship created""}","201: Created, 400: Bad Request"
Relationships,Create CONTRADICTS,POST,/api/v1/contradicts,Create CONTRADICTS relationship,"{""from"": ""claim_id"", ""to"": ""claim_id"", ""strength"": number}",Success Message,"{""message"": ""CONTRADICTS relationship created""}","201: Created, 400: Bad Request"
Relationships,Create DERIVED_FROM,POST,/api/v1/derived-from,Create DERIVED_FROM relationship,"{""from"": ""concept_id"", ""to"": ""source_id""}",Success Message,"{""message"": ""DERIVED_FROM relationship created""}","201: Created, 400: Bad Request"
Relationships,Create RAISES,POST,/api/v1/raises,Create RAISES relationship,"{""from"": ""question_id"", ""to"": ""concept_id""}",Success Message,"{""message"": ""RAISES relationship created""}","201: Created, 400: Bad Request"
Relationships,Create POINTS_TO,POST,/api/v1/points-to,Create POINTS_TO relationship,"{""from"": ""essay_id"", ""to"": ""any_node_id""}",Success Message,"{""message"": ""POINTS_TO relationship created""}","201: Created, 400: Bad Request"
Relationships,Get Connections,GET,/api/v1/connections?node_id=:id,Get all connections for a node,None,Array of Connection Objects,"[{""from"": ""node_1"", ""relationship"": ""INFLUENCES"", ""to"": ""node_2""}]","200: OK, 500: Internal Error"

System,Health Check,GET,/health,Check system health,None,Health Status,"{""status"": ""ok""}","200: OK"